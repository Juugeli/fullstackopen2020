{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","Notification","message","className","Person","person","delPerson","name","number","onClick","Persons","persons","map","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","App","useState","setPersons","setNewName","setNewNumber","setMessage","useEffect","personService","initialPersons","event","preventDefault","personObject","some","window","alert","returnedPerson","concat","setTimeout","target","confirm","filter","p","ReactDOM","render","document","getElementById"],"mappings":"yMACMA,EAAU,eAsBD,EApBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB5B,EAfA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EALM,SAACG,GAElB,OADgBP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCjBvCK,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKC,UAAU,UAAf,SACGD,KAKDE,EAAS,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAExB,OACE,gCAAMD,EAAOE,KAAb,IAAoBF,EAAOG,OAC3B,wBAAQC,QAAS,kBAAMH,EAAUD,IAAjC,wBAIEK,EAAU,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAASL,EAAgB,EAAhBA,UAE1B,OACEK,EAAQC,KAAI,SAAAP,GAAM,OACd,cAAC,EAAD,CAA0BA,OAAQA,EAAQC,UAAWA,GAAxCD,EAAOE,UAKtBM,EAAa,SAAC,GAA6E,IAA3EC,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,QAASC,EAAsD,EAAtDA,iBAAkBC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,mBACrE,OACE,uBAAMC,SAAUL,EAAhB,UACE,wCAEA,uBACAM,MAAOL,EACPM,SAAUL,OAGV,0CAEA,uBACAI,MAAOH,EACPI,SAAUH,OAGV,8BACE,wBAAQI,KAAK,SAAb,uBAqGOC,EA/FH,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACRb,EADQ,KACCc,EADD,OAEgBD,mBAAS,IAFzB,mBAERT,EAFQ,KAECW,EAFD,OAGoBF,mBAAS,IAH7B,mBAGRP,EAHQ,KAGGU,EAHH,OAIeH,mBAAS,MAJxB,mBAIRtB,EAJQ,KAIC0B,EAJD,KAMhBC,qBAAU,WACRC,IAEKpC,MAAK,SAAAqC,GACJN,EAAWM,QAEhB,IA8DH,OACE,gCACE,2CACE,cAAC,EAAD,CAAc7B,QAASA,IACvB,cAAC,EAAD,CACAY,UAhEY,SAACkB,GACjBA,EAAMC,iBAEN,IAAMC,EAAe,CACnB3B,KAAMQ,EACNP,OAAQS,GAGPN,EAAQwB,MAAK,SAAA9B,GAAM,OAAIA,EAAOE,OAAS2B,EAAa3B,SACrD6B,OAAOC,MAAP,UAAgBtB,EAAhB,mCACAW,EAAW,IACXC,EAAa,KAGbG,EACQI,GACPxC,MAAK,SAAA4C,GACNb,EAAWd,EAAQ4B,OAAOD,IAC1BZ,EAAW,IACXC,EAAa,IAEbC,EAAW,UAAD,OACEb,EADF,MAGVyB,YAAW,WACTZ,EAAW,QACV,SAuCDb,QAASA,EACTC,iBAjBmB,SAACgB,GAExBN,EAAWM,EAAMS,OAAOrB,QAgBpBH,UAAWA,EACXC,mBAdqB,SAACc,GAE1BL,EAAaK,EAAMS,OAAOrB,UAcxB,yCACE,cAAC,EAAD,CACET,QAASA,EACTL,UAzCU,SAAAD,GAGZ+B,OAAOM,QAAP,iBAAyBrC,EAAOE,KAAhC,SACFuB,EACczB,EAAON,IACrB0B,EAAWd,EAAQgC,QAAO,SAAAC,GAAC,OAAIA,EAAE7C,KAAOM,EAAON,OAE/C6B,EAAW,YAAD,OACIvB,EAAOE,KADX,MAGViC,YAAW,WACTZ,EAAW,QACV,a,MC9GTiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.329053ee.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"message\">\n      {message}\n    </div>\n  )\n}\n\nconst Person = ({ person, delPerson }) => {\n\n  return (\n    <div>{person.name} {person.number}\n    <button onClick={() => delPerson(person)}>Delete</button></div>\n  )\n}\n\nconst Persons = ({ persons, delPerson }) => {\n\n  return (\n    persons.map(person => \n        <Person key={person.name} person={person} delPerson={delPerson} />\n    )\n  )\n}\n\nconst PersonForm = ({ addPerson, newName, handleNameChange, newNumber, handleNumberChange }) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name:\n      <input\n      value={newName}\n      onChange={handleNameChange}\n      />\n      </div>\n      <div>\n        number:\n      <input\n      value={newNumber}\n      onChange={handleNumberChange}\n      />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form >\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n        .then(initialPersons => {\n          setPersons(initialPersons)\n      })\n  }, [])\n  //console.log('render', persons.length, 'persons')\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if(persons.some(person => person.name === personObject.name)){\n      window.alert(`${newName} is already added to phonebook`);\n      setNewName('')\n      setNewNumber('')\n    }\n    else {\n      personService\n      .create(personObject)\n      .then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson))\n      setNewName('')\n      setNewNumber('')\n\n      setMessage(\n        `Added '${newName}'`\n      )\n      setTimeout(() => {\n        setMessage(null)\n      }, 3000)\n    })\n    }\n    \n  }\n\n  const delPerson = person => {\n    //console.log('deletePerson: ' + id)\n\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personService\n      .deletePerson(person.id)\n      setPersons(persons.filter(p => p.id !== person.id))\n\n      setMessage(\n        `Deleted '${person.name}'`\n      )\n      setTimeout(() => {\n        setMessage(null)\n      }, 3000)\n    }\n  }\n  \n  const handleNameChange = (event) => {\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    //console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Notification message={message} />\n        <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n        />\n      <h2>Numbers</h2>\n        <Persons\n          persons={persons}\n          delPerson={delPerson}\n        />\n    </div>\n  )\n\n}\n\nexport default App","// Moduulit (Modules)\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}